---

export interface Props {
  title: string;
  description: string;
  href: string;
  tags?: string[];
  type: 'blog' | 'project' | 'course';
  publishDate?: Date | undefined;
  heroImage?: any;
}

const { title, description, href, tags, publishDate, heroImage } = Astro.props;
---
<a
  href={href}
  class="group bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-xl transition-all duration-300 flex flex-col overflow-hidden h-full min-h-[420px]"
  data-type={Astro.props.type}
  data-title={title.toLowerCase()}
>

  <div class="w-full h-40 overflow-hidden">
    <img
      src={heroImage || '/placeholder.png'}
      alt={`Thumbnail for ${title}`}
      class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
      loading="lazy"
      decoding="async"
      sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
    />
  </div>

  <div class="p-6 flex flex-col flex-grow">
    {publishDate && (
      <p class="text-sm text-gray-500 mb-2">
        {new Date(publishDate).toLocaleDateString('en-us', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })}
      </p>
    )}
    <h3 class="text-xl font-bold text-gray-900 group-hover:text-accent transition-colors duration-300 mb-2">
      {title}
    </h3>
    <p class="text-gray-600 mb-4 flex-grow line-clamp-2">
      {description}
    </p>

    <div class="mt-auto">
      <div class="flex flex-wrap gap-2 mb-4">
        {tags?.map(tag => (
          <span class="bg-gray-100 text-gray-700 text-xs font-semibold px-2.5 py-1 rounded-full">
            {tag}
          </span>
        ))}
      </div>
      <div class="text-accent font-semibold opacity-0 group-hover:opacity-100 transition-opacity duration-300">
        Read More
      </div>
    </div>
  </div>
</a>