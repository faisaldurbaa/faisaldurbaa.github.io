---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import FadeIn from '../../components/FadeIn.astro';
import Accordion from '../../components/Accordion.astro';
import { Icon } from 'astro-icon/components';
import ShareButton from '../../components/ShareButton.astro';

export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}


const { entry } = Astro.props;
const { Content } = await entry.render();

const sections = entry.body.split(/(?=^##\s)/m).filter(Boolean);

const accordionItems = sections.reduce((acc, section) => {
  const lines = section.trim().split('\n');
  const titleLine = lines[0];

  if (titleLine && titleLine.startsWith('## ')) {
    const title = titleLine.replace(/^##\s/, '').trim();
    const contentLines = lines.slice(1);
    const content = contentLines.join('\n').trim();
    acc.push({ title, content });
  }
  return acc;
}, [] as { title: string; content: string }[]);
---
<Layout seo={{
  title: entry.data.title,
  description: entry.data.description,
  image: entry.data.heroImage
}}>
  <article class="container mx-auto max-w-4xl p-4 sm:p-8">
    <FadeIn>

      <div class="bg-white p-6 sm:p-8 border border-gray-200 rounded-lg shadow-sm mb-8">
        <div class="flex justify-between items-center mb-8">
          <a href="/portfolio/" class="text-accent hover:underline font-semibold inline-flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6"/></svg>
            Back to Portfolio
          </a>
          <ShareButton title={entry.data.title} />
        </div>

        <div class="text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{entry.data.title}</h1>
          <hr class="w-25 mx-auto mb-6 border-gray-300" />
          <p class="text-lg text-gray-600 max-w-2xl mx-auto mb-6 text-left">{entry.data.intro || entry.data.description}</p>
        </div>

        <div class="flex flex-wrap justify-center gap-4">
          {entry.data.repoUrl && (
            <a href={entry.data.repoUrl} target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 bg-gray-800 text-white px-4 py-2 rounded-md hover:bg-gray-900 transition-colors">
              <Icon name="mdi:github" class="w-5 h-5" />
              Source Code
            </a>
          )}
          
          {entry.data.liveUrl && (
            <a href={entry.data.liveUrl} target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 bg-accent text-white px-4 py-2 rounded-md hover:bg-accent/90 transition-colors">
              <Icon name="mdi:launch" class="w-5 h-5" />
              Live Demo
            </a>
          )}

          {entry.data.datasetUrl && (
            <a href={entry.data.datasetUrl} target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 bg-green-700 text-white px-4 py-2 rounded-md hover:bg-green-800 transition-colors">
              <Icon name="mdi:database" class="w-5 h-5" />
              View Dataset
            </a>
          )}
        </div>
      </div>
      
      <div class="bg-white p-4 sm:p-8 border border-gray-200 rounded-lg shadow-sm">
        <h2 class="text-2xl font-bold mb-4 px-4 sm:px-0">Project Phases</h2>
        {accordionItems.map(item => (
          <Accordion summary={item.title} content={item.content} />
        ))}
        {accordionItems.length === 0 && (
          <div class="prose max-w-none px-4 sm:px-0"><Content /></div>
        )}
      </div>

    </FadeIn>
  </article>
</Layout>