---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import FadeIn from '../../components/FadeIn.astro';
import ShareButton from '../../components/ShareButton.astro';
import RelatedContent from '../../components/RelatedContent.astro';

export async function getStaticPaths() {
  const courseEntries = (await getCollection('courses')).filter(entry => 
    entry.id.endsWith('index.mdx') || entry.id.endsWith('index.md')
  );
  
  return courseEntries
    .filter(entry => entry.slug)
    .map(entry => {
      const courseSlug = entry.slug!.split('/')[0];
      return {
        params: { slug: courseSlug },
        props: { entry, courseSlug },
      };
    });
}

const { entry, courseSlug } = Astro.props as { 
  entry: CollectionEntry<'courses'>;
  courseSlug: string; 
};

const allLessons = await getCollection('courses', ({ id }) => 
  id.startsWith(courseSlug) && !(id.endsWith('index.mdx') || id.endsWith('index.md'))
);

const sortedLessons = allLessons.sort((a, b) => 
  (a.data.lessonNumber ?? 0) - (b.data.lessonNumber ?? 0)
);
---
<Layout seo={{
  title: entry.data.title,
  description: entry.data.description,
  image: entry.data.heroImage
}}>
  <div class="container mx-auto max-w-4xl p-4 sm:p-8">
    <FadeIn>
      <!-- New Consolidated Intro Card -->
      <div class="bg-white p-6 sm:p-8 border border-gray-200 rounded-lg shadow-sm mb-8">
        <!-- Row 1: Back Link and Share Button -->
        <div class="flex justify-between items-center mb-8">
          <a href="/portfolio/" class="text-accent hover:underline font-semibold inline-flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6"/></svg>
            Back to Portfolio
          </a>
          <ShareButton title={entry.data.title} />
        </div>

        <!-- Row 2: Title and Introduction -->
        <div class="text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{entry.data.title}</h1>
          <hr class="w-25 mx-auto mb-6 border-gray-300" />
          <p class="text-lg text-gray-600 max-w-2xl mx-auto text-left">
            {entry.data.intro || entry.data.description}
          </p>
        </div>
      </div>
      
      <!-- Card 2: Table of Contents -->
      <div class="bg-white p-6 sm:p-8 border border-gray-200 rounded-lg shadow-sm">
        <h2 class="text-2xl font-bold mb-6">Table of Contents</h2>
        <ol class="list-none space-y-6">
          {sortedLessons.map((lesson, index) => (
            <li class="border-b border-gray-200 pb-4 last:border-b-0">
              <a href={`/courses/${courseSlug}/${lesson.slug.split('/')[1]}`} class="group">
                <div class="flex items-start gap-4">
                  <span class="text-2xl font-bold text-gray-300 group-hover:text-accent transition-colors">
                    {index + 1}
                  </span>
                  <div>
                    <h3 class="text-lg text-gray-800 group-hover:text-accent font-semibold transition-colors">
                      {lesson.data.title}
                    </h3>
                    <p class="text-gray-600">{lesson.data.description}</p>
                  </div>
                </div>
              </a>
            </li>
          ))}
        </ol>
      </div>

      <RelatedContent currentSlug={courseSlug} />
      
    </FadeIn>
  </div>
</Layout>